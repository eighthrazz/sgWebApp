buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 
apply plugin: 'application'

jar {
	baseName = 'sg'
	version = '0.0.4'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations.all {
   exclude group: "commons-logging", module: "commons-logging"
}

dependencies {
    compile 'com.google.api-client:google-api-client:1.20.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.20.0'
    compile 'com.google.apis:google-api-services-calendar:v3-rev125-1.20.0' 
    compile 'org.springframework.social:spring-social-twitter'
    compile 'org.springframework.social:spring-social-facebook'
	compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
	compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.slf4j:jcl-over-slf4j:1.7.12'
    compile 'ch.qos.logback:logback-classic:1.1.3'
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	configurations {
        all*.exclude group: '', module: 'servlet-api'
    }
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

springBoot {
    mainClass = "com.razz.Application"
}

task deployJar(type: Copy) {
    from jar 
    into "h:/"
}   

